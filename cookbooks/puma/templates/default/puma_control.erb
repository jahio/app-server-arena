#!/bin/bash
# Auto-generated by Chef; your changes will be overwritten!

# Pull in a full environment and include some configuration of said commands.

source /etc/profile
source /data/<%= @app_name %>/shared/config/env
source /data/<%= @app_name %>/shared/config/env.custom

# Ensure that we are running as the root user.
# If not, error exit while notifying the user.

if [[ $(id -u) -eq 0 ]] ; then
  echo "ERROR: This script must be run as a user, not as root." 2>&1
  exit 1
fi

get_pid()
{
  # Contians master pid not that of workers
  pidfile="${pid_directory}/puma.pid"
  if [[ -s "$pidfile" ]] ; then
    current_pid=$(cat "$pidfile")
  else
    current_pid=0
  fi
}

start_puma()
{
  cd "/data/${application}/current"
  /usr/local/bin/bundle exec puma -e ${framework_env} --pidfile ${pid_directory}/puma.pid -t 4:16 -w <%= @num_workers %> --preload -b unix:///var/run/engineyard/${application}/puma.sock > ${log_directory}/puma.log 2>&1 &
}

stop_puma()
{
  # get pid, send kill to pid
  get_pid
  if [[ ${current_pid} == 0 ]] ; then
    return 1
  fi

  kill ${current_pid}
}

murder_puma()
{
  get_pid
  if [[ ${current_pid} == 0 ]] ; then
    return 1
  fi

  kill -9 ${current_pid} # forcably kill
}

hot_restart()
{
  # sends SIGUSR2 to puma
  # get pid
  get_pid
  if [[ ${current_pid} == 0 ]] ; then
    start_puma
  else
    kill -s USR2 ${current_pid}
  fi
}

# Take appropriate action depending on the argument
case "$1" in

restart)
  hot_restart
  ;;
start)
  start_puma
  ;;
stop)
  stop_puma
  ;;
murder)
  murder_puma
  ;;
*)
echo "Usage: $0 {start|stop|restart|murder}"
exit 1
;;
esac

exit $?